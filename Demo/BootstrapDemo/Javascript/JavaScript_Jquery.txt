	jQuery
	JavaScript世界中使用最广泛的一个库。
	jQuery这么流行，肯定是因为它解决了一些很重要的问题。实际上，jQuery能帮我们干这些事情：
	1.消除浏览器差异：你不需要自己写冗长的代码来针对不同的浏览器来绑定事件，编写AJAX等代码；
	2.简洁的操作DOM的方法：写$('#test')肯定比document.getElementById('test')来得简洁；
	3.轻松实现动画、修改CSS等各种操作。
	jQuery的理念“Write Less, Do More“，让你写更少的代码，完成更多的工作！

	jQuery版本
    目前jQuery有1.x和2.x两个主要版本，区别在于2.x移除了对古老的IE 6、7、8的支持，因此2.x的代码更精简。选择哪个版本主要取决于你是否想支持IE 6~8。
    从jQuery官网可以下载最新版本。jQuery只是一个jquery-xxx.js文件，但你会看到有compressed（已压缩）和uncompressed（未压缩）两种版本，使用时完全一样，但如果你想深入研究jQuery源码，那就用uncompressed版本。

    window.jQuery; // jQuery(selector, context)
    window.$; // jQuery(selector, context)
    $ === jQuery; // true
    typeof($); // 'function'

    绝大多数时候，我们都直接用$（因为写起来更简单嘛）。但是，如果$这个变量不幸地被占用了，而且还不能改，那我们就只能让jQuery把$变量交出来，然后就只能使用jQuery这个变量.


    选择器是jQuery的核心。一个选择器写出来类似$('#dom-id')。
    按ID查找:如果某个DOM节点有id属性 
    // 查找<div id="abc">: 
       var div = $('#abc');
    jQuery对象类似数组，它的每个元素都是一个引用了DOM节点的对象。[<div id="abc">...</div>]
    如果id为abc的<div>不存在，[]
    按tag查找:按tag查找只需要写上tag名称
    var ps = $('p'); // 返回所有<p>节点
    ps.length;       // 数一数页面有多少个<p>节点
    按class查找:按class查找注意在class名称前加一个.：
    var a = $('.red'); // 所有节点包含`class="red"`都将返回
	// 例如:
	// <div class="red">...</div>
	// <p class="green red">...</p>

	层级选择器(Descendant Selector)
	如果两个DOM元素具有层级关系，就可以用$('ancestor descendant')来选择，层级之间用空格隔开。
	<div class="testing">
	    <ul class="lang">
	        <li class="lang-javascript">JavaScript</li>
	        <li class="lang-python">Python</li>
	        <li class="lang-lua">Lua</li>
	    </ul>
	</div>

	$('ul.lang li.lang-javascript');     // [<li class="lang-javascript">JavaScript</li>]
    $('div.testing li.lang-javascript'); // [<li class="lang-javascript">JavaScript</li>]

    子选择器（Child Selector）
    子选择器$('parent>child')类似层级选择器，但是限定了层级关系必须是父子关系，就是<child>节点必须是<parent>节点的直属子节点。还是以上面的例子：
    $('ul.lang>li.lang-javascript'); // 可以选出[<li class="lang-javascript">JavaScript</li>]
    $('div.testing>li.lang-javascript'); // [], 无法选出，因为<div>和<li>不构成父子关系

    过滤器（Filter）
    过滤器一般不单独使用，它通常附加在选择器上，帮助我们更精确地定位元素。
    $('ul.lang li'); // 选出JavaScript、Python和Lua 3个节点
	$('ul.lang li:first-child'); // 仅选出JavaScript
	$('ul.lang li:last-child'); // 仅选出Lua
	$('ul.lang li:nth-child(2)'); // 选出第N个元素，N从1开始
	$('ul.lang li:nth-child(even)'); // 选出序号为偶数的元素
	$('ul.lang li:nth-child(odd)'); // 选出序号为奇数的元素


	表单相关
    针对表单元素，jQuery还有一组特殊的选择器：
    :input：可以选择<input>，<textarea>，<select>和<button>；
    :file：可以选择<input type="file">，和input[type=file]一样；
    :checkbox：可以选择复选框，和input[type=checkbox]一样；
    :radio：可以选择单选框，和input[type=radio]一样；
    :focus：可以选择当前输入焦点的元素，例如把光标放到一个<input>上，用$('input:focus')就可以选出；
    :checked：选择当前勾上的单选框和复选框，用这个选择器可以立刻获得用户选择的项目，如$('input[type=radio]:checked')；
    :enabled：可以选择可以正常输入的<input>、<select>等，也就是没有灰掉的输入；
    :disabled：和:enabled正好相反，选择那些不能输入的。
    此外，jQuery还有很多有用的选择器，例如，选出可见的或隐藏的元素：
    $('div:visible'); // 所有可见的div
    $('div:hidden'); // 所有隐藏的div

